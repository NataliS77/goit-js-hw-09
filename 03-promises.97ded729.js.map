{"mappings":"oeAAA,IAAAA,EAAAC,EAAA,SAEAC,QAAQC,IAAI,SAAUH,EAAAI,QACtB,MAAMC,EAAO,CACXC,KAAMC,SAASC,cAAc,UAM/B,SAASC,EAAcC,EAAUC,GAC/B,OAAO,IAAIC,SAAQ,CAACC,EAASC,KAC3BC,YAAW,KACcC,KAAKC,SAAW,GAEzCJ,EAAQ,C,SAACH,E,MAASC,IAElBG,EAAO,C,SAACJ,E,MAASC,GAAO,GAErBA,EAAM,G,CAuBb,SAASO,GAAUR,SAACA,EAAQC,MAACA,IAC3BX,EAAAI,OAAOe,QAAQ,uBAAqBT,QAAiBC,M,CAGtD,SAASS,GAAQV,SAACA,EAAQC,MAACA,IAC1BX,EAAAI,OAAOiB,QAAQ,sBAAoBX,QAAiBC,M,CAxCrDN,EAAKC,KAAKgB,iBAAiB,UAiB3B,SAASC,EAAiBC,GACzBA,EAAMC,iBAER,MAAMC,EAASF,EAAMG,cAAcC,SACnC,IAAIjB,EAAQkB,OAAOH,EAAOf,MAAMmB,OAC5BC,EAAOF,OAAOH,EAAOK,KAAKD,OAC1BE,EAASH,OAAOH,EAAOM,OAAOF,OAEhC,IAAK,IAAIG,EAAG,EAAGA,GAAKD,EAAQC,GAAI,EAE9BxB,EAAcwB,EAAGtB,GAAOuB,KAAKhB,GAAWiB,MAAMf,GAElDT,GAASoB,EACL1B,EAAKC,KAAK8B,QAGdlC,QAAQC,IAAIoB,E","sources":["src/js/03-promises.js"],"sourcesContent":["import { Notify } from 'notiflix/build/notiflix-notify-aio';\n\nconsole.log('Notify', Notify)\nconst refs = {\n  form: document.querySelector('.form'),\n\n}\n refs.form.addEventListener('submit',onCreatePromises);\n\n\nfunction createPromise(position, delay) {\n  return new Promise((resolve, reject) => {\n    setTimeout(()=>{\n       const shouldResolve = Math.random() > 0.3;\n  if (shouldResolve) {\n    resolve({position,delay});\n  } else {\n    reject({position,delay});\n  }\n    }, delay);\n  });\n  \n }\n\n function onCreatePromises(event){\n  event.preventDefault();\n\nconst formEl = event.currentTarget.elements;\nlet delay = Number(formEl.delay.value);\nlet step = Number(formEl.step.value);\nlet amount = Number(formEl.amount.value);\n\n  for (let i= 1; i <= amount; i +=1){\n\n    createPromise(i, delay).then(onSuccess).catch(onError);\n\ndelay += step;\n    refs.form.reset(); \n\n  }\nconsole.log(onCreatePromises)\n}\nfunction onSuccess({position,delay}){\n  Notify.success(`✅ Fulfilled promise ${position} in ${delay}ms`);\n \n }\n function onError({position,delay}){\n  Notify.failure(`❌ Rejected promise ${position} in ${delay}ms`);\n\n }\n\n\n\n// console.log(onCreatePromises)\n//     createPromise(i, delay)\n//   .then(({ position, delay }) => {\n//     console.log(`✅ Fulfilled promise ${position} in ${delay}ms`);\n// Notify.success(`✅ Fulfilled promise ${position} in ${delay}ms`);\n//   })\n//   .catch(({ position, delay }) => {\n//     console.log(`❌ Rejected promise ${position} in ${delay}ms`);\n// Notify.failure(`❌ Rejected promise ${position} in ${delay}ms`);\n//   });\n//   }\n\n//  }\n\n \n\n"],"names":["$iQIUW","parcelRequire","console","log","Notify","$47d4ff9957288465$var$refs","form","document","querySelector","$47d4ff9957288465$var$createPromise","position","delay","Promise","resolve","reject","setTimeout","Math","random","$47d4ff9957288465$var$onSuccess","success","$47d4ff9957288465$var$onError","failure","addEventListener","$47d4ff9957288465$var$onCreatePromises","event","preventDefault","formEl","currentTarget","elements","Number","value","step","amount","i","then","catch","reset"],"version":3,"file":"03-promises.97ded729.js.map"}