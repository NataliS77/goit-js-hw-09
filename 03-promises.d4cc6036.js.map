{"mappings":"gfAAA,IAAAA,EAAAC,EAAA,SAEAC,QAAQC,IAAI,SAAUH,EAAAI,QACtB,IAAMC,EAAO,CACXC,KAAMC,SAASC,cAAc,UAM/B,SAASC,EAAcC,EAAUC,GAC/B,OAAO,IAAIC,SAAQ,SAACC,EAASC,GAC3BC,YAAW,WACcC,KAAKC,SAAW,GAEzCJ,EAAQ,CAACH,WAASC,UAElBG,EAAO,CAACJ,WAASC,S,GAEdA,E,IAuBP,SAASO,EAAUC,G,IAACT,EAADS,EAACT,SAASC,EAAVQ,EAAUR,MAC3BX,EAAAI,OAAOgB,QAAQ,uBAAwCC,OAAfX,EAAS,QAAYW,OAANV,EAAM,M,CAG9D,SAASW,EAAQH,G,IAACT,EAADS,EAACT,SAASC,EAAVQ,EAAUR,MAC1BX,EAAAI,OAAOmB,QAAQ,sBAAuCF,OAAfX,EAAS,QAAYW,OAANV,EAAM,M,CAxC7DN,EAAKC,KAAKkB,iBAAiB,UAiB3B,SAASC,EAAiBC,GACzBA,EAAMC,iBAON,IALF,IAAMC,EAASF,EAAMG,cAAcC,SAC7BnB,EAAQoB,OAAOH,EAAOjB,MAAMqB,OAE5BC,GADOF,OAAOH,EAAOM,KAAKF,OACjBD,OAAOH,EAAOK,OAAOD,QAEzBG,EAAG,EAAGA,GAAKF,EAAQE,GAAI,EAE9B1B,EAAc0B,EAAGxB,GAAOyB,KAAKlB,GAAWmB,MAAMf,GAG9CjB,EAAKC,KAAKgC,QAGdpC,QAAQC,IAAIsB,E","sources":["src/js/03-promises.js"],"sourcesContent":["import { Notify } from 'notiflix/build/notiflix-notify-aio';\n\nconsole.log('Notify', Notify)\nconst refs = {\n  form: document.querySelector('.form'),\n\n}\n refs.form.addEventListener('submit',onCreatePromises);\n\n\nfunction createPromise(position, delay) {\n  return new Promise((resolve, reject) => {\n    setTimeout(()=>{\n       const shouldResolve = Math.random() > 0.3;\n  if (shouldResolve) {\n    resolve({position,delay});\n  } else {\n    reject({position,delay});\n  }\n    }, delay);\n  });\n  \n }\n\n function onCreatePromises(event){\n  event.preventDefault();\n\nconst formEl = event.currentTarget.elements;\nconst delay = Number(formEl.delay.value);\nconst step = Number(formEl.step.value);\nconst amount = Number(formEl.amount.value);\n\n  for (let i= 1; i <= amount; i +=1){\n\n    createPromise(i, delay).then(onSuccess).catch(onError);\n\ndelay + step;\n    refs.form.reset(); \n\n  }\nconsole.log(onCreatePromises)\n}\nfunction onSuccess({position,delay}){\n  Notify.success(`✅ Fulfilled promise ${position} in ${delay}ms`);\n \n }\n function onError({position,delay}){\n  Notify.failure(`❌ Rejected promise ${position} in ${delay}ms`);\n\n }\n\n\n\n// console.log(onCreatePromises)\n//     createPromise(i, delay)\n//   .then(({ position, delay }) => {\n//     console.log(`✅ Fulfilled promise ${position} in ${delay}ms`);\n// Notify.success(`✅ Fulfilled promise ${position} in ${delay}ms`);\n//   })\n//   .catch(({ position, delay }) => {\n//     console.log(`❌ Rejected promise ${position} in ${delay}ms`);\n// Notify.failure(`❌ Rejected promise ${position} in ${delay}ms`);\n//   });\n//   }\n\n//  }\n\n \n\n"],"names":["$h6c0i","parcelRequire","console","log","Notify","$ce04d3a99e08e73b$var$refs","form","document","querySelector","$ce04d3a99e08e73b$var$createPromise","position","delay","Promise","resolve","reject","setTimeout","Math","random","$ce04d3a99e08e73b$var$onSuccess","param","success","concat","$ce04d3a99e08e73b$var$onError","failure","addEventListener","$ce04d3a99e08e73b$var$onCreatePromises","event","preventDefault","formEl","currentTarget","elements","Number","value","amount","step","i","then","catch","reset"],"version":3,"file":"03-promises.d4cc6036.js.map"}